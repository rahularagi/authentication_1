spring.application.name=authentication
logging.level.org.springframework.web=TRACE

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/rahul
spring.datasource.username=rahul
spring.datasource.password=RAHUL
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.flyway.enabled=true
#flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
#flyway.validate-migration-naming=true
spring.jpa.hibernate.ddl-auto = validate


#or validate, create, none depending on your use case
#spring.jpa.show-sql=true
server.port = 8181


#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods[0]=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[0]=authorization_code
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[1]=refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris[0]=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris[0]=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[0]=openid
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[1]=profile
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true

logging.level.org.springframework.security.*=DEBUG
